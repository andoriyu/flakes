---
name: Validate Flake & Packages
on:
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:
      - main
  workflow_dispatch:  # allows manual triggering
  schedule:
    - cron: '0 0 * * 0'  # runs weekly on Sunday at 00:00

jobs:
  validate-flake:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nixbuild/nix-quick-install-action@v9
        with:
          nix_version: 2.4
          nix_conf: experimental-features = nix-command flakes
      - run: nix flake check --show-trace
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pkg: ["git-cliff", "dart-sass"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: nixbuild/nix-quick-install-action@v9
        with:
          nix_version: 2.4
          nix_conf: experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v10
        with:
          name: andoriyu-flakes
          authToken: ${{ secrets.CACHIX_TOKEN }}
      - run: cachix watch-exec andoriyu-flakes nix build .#${{matrix.pkg}}
  cache:
    runs-on: ubuntu-latest
    needs: [validate-flake, build]
    steps:
      - uses: actions/checkout@v2
      - uses: nixbuild/nix-quick-install-action@v9
        with:
          nix_version: 2.4
          nix_conf: experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v10
        with:
          name: andoriyu-flakes
          authToken: ${{ secrets.CACHIX_TOKEN }}
      - name: Cache flake inputs
        run: |
          nix flake archive --json
          | jq -r '.path,(.inputs|to_entries[].value.path)'
          | cachix push andoriyu-flakes
      - name: Cache dev-shell
        run: |
          nix develop --profile dev-profile
          cachix push andoriyu-flakes dev-profile
